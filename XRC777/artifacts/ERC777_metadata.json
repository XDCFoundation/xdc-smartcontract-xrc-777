{
	"compiler": {
		"version": "0.5.5+commit.47a71e8f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "defaultOperators",
				"outputs": [
					{
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "spender",
						"type": "address"
					},
					{
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "holder",
						"type": "address"
					},
					{
						"name": "recipient",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "granularity",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "sender",
						"type": "address"
					},
					{
						"name": "recipient",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					},
					{
						"name": "data",
						"type": "bytes"
					},
					{
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "operatorSend",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "tokenHolder",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "operator",
						"type": "address"
					}
				],
				"name": "authorizeOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "recipient",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					},
					{
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "send",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "recipient",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "operator",
						"type": "address"
					},
					{
						"name": "tokenHolder",
						"type": "address"
					}
				],
				"name": "isOperatorFor",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "holder",
						"type": "address"
					},
					{
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "operator",
						"type": "address"
					}
				],
				"name": "revokeOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "account",
						"type": "address"
					},
					{
						"name": "amount",
						"type": "uint256"
					},
					{
						"name": "data",
						"type": "bytes"
					},
					{
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "operatorBurn",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "amount",
						"type": "uint256"
					},
					{
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "burn",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "name",
						"type": "string"
					},
					{
						"name": "symbol",
						"type": "string"
					},
					{
						"name": "defaultOperators",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "Sent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "Minted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "Burned",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "tokenHolder",
						"type": "address"
					}
				],
				"name": "AuthorizedOperator",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "tokenHolder",
						"type": "address"
					}
				],
				"name": "RevokedOperator",
				"type": "event"
			}
		],
		"devdoc": {
			"details": "Implementation of the {IERC777} interface.\r  * This implementation is agnostic to the way tokens are created. This means\r that a supply mechanism has to be added in a derived contract using {_mint}.\r  * Support for ERC20 is included in this contract, as specified by the EIP: both\r the ERC777 and ERC20 interfaces can be safely used when interacting with it.\r Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\r movements.\r  * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\r are no special restrictions in the amount of tokens that created, moved, or\r destroyed. This makes integration with ERC20 applications seamless.\r",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}.\r      * Note that operator and allowance concepts are orthogonal: operators may\r not have allowance, and accounts with allowance may not be operators\r themselves.\r"
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}.\r      * Note that accounts cannot have allowance issued by their operators.\r"
				},
				"authorizeOperator(address)": {
					"details": "See {IERC777-authorizeOperator}.\r"
				},
				"balanceOf(address)": {
					"details": "Returns the amount of tokens owned by an account (`tokenHolder`).\r"
				},
				"burn(uint256,bytes)": {
					"details": "See {IERC777-burn}.\r      * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\r"
				},
				"constructor": {
					"details": "`defaultOperators` may be an empty array.\r"
				},
				"decimals()": {
					"details": "See {ERC20Detailed-decimals}.\r      * Always returns 18, as per the\r [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\r"
				},
				"defaultOperators()": {
					"details": "See {IERC777-defaultOperators}.\r"
				},
				"granularity()": {
					"details": "See {IERC777-granularity}.\r      * This implementation always returns `1`.\r"
				},
				"isOperatorFor(address,address)": {
					"details": "See {IERC777-isOperatorFor}.\r"
				},
				"name()": {
					"details": "See {IERC777-name}.\r"
				},
				"operatorBurn(address,uint256,bytes,bytes)": {
					"details": "See {IERC777-operatorBurn}.\r      * Emits {Burned} and {IERC20-Transfer} events.\r"
				},
				"operatorSend(address,address,uint256,bytes,bytes)": {
					"details": "See {IERC777-operatorSend}.\r      * Emits {Sent} and {IERC20-Transfer} events.\r"
				},
				"revokeOperator(address)": {
					"details": "See {IERC777-revokeOperator}.\r"
				},
				"send(address,uint256,bytes)": {
					"details": "See {IERC777-send}.\r      * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\r"
				},
				"symbol()": {
					"details": "See {IERC777-symbol}.\r"
				},
				"totalSupply()": {
					"details": "See {IERC777-totalSupply}.\r"
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}.\r      * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\r interface if it is a contract.\r      * Also emits a {Sent} event.\r"
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}.\r     * Note that operator and allowance concepts are orthogonal: operators cannot\r call `transferFrom` (unless they have allowance), and accounts with\r allowance cannot call `operatorSend` (unless they are operators).\r     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\r"
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"XRC777/ERC777.sol": "ERC777"
		},
		"evmVersion": "petersburg",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"XRC777/Address.sol": {
			"keccak256": "0xe9d744d6e114e339bc3b28c3427c1f5e7f71896d99ca957614f3072f783a2061",
			"urls": [
				"bzzr://d48b0196b67ee068ee2eec33c817c936cd6af5a518d8a7e69f2adbd79e5eefad"
			]
		},
		"XRC777/Context.sol": {
			"keccak256": "0x37dc42902efc7989706ffda571ab420f0996a264641ca19c4013c4c267fa083e",
			"urls": [
				"bzzr://b3964dd1148c6e5d05f8d52f6983407d57b1d50f615627f1c3f836ed6687a06a"
			]
		},
		"XRC777/ERC777.sol": {
			"keccak256": "0xbe551ed4b585e2c7dd892785766be5ed8ff8c0824baaccfb1caa6c5623103ad3",
			"urls": [
				"bzzr://a9c44186a03472af4562740503cb581dfe00b751e8080bd8dcf2d24950e30621"
			]
		},
		"XRC777/IERC1820Registry.sol": {
			"keccak256": "0x045ee8858f6dc82c2bc2184c328e1988b0f029b3e0a35810e6c975668adcf50c",
			"urls": [
				"bzzr://314ef8f50b0e623b6cbb163dc281f394bb2fb0483ff9d8a404dfb34444b95307"
			]
		},
		"XRC777/IERC20.sol": {
			"keccak256": "0x0026edc82e7b911c32cad4b1a320a13d728d969c78e02707a98ca1afd73564d0",
			"urls": [
				"bzzr://9849ae1b7b228cdc0bee7c8c86370f03f9b23efe2cbc4a481cc5b71cbf88a797"
			]
		},
		"XRC777/IERC777.sol": {
			"keccak256": "0xe62d2455de98599dc62faf0268347f242c9c40c63e06b88fb8ea2d7ea38f7e2f",
			"urls": [
				"bzzr://12ad4bc02a5f8c01a0e3a41c0a720e6d0a5acf9d52d092bcf22490ebbe9dd16f"
			]
		},
		"XRC777/IERC777Recipient.sol": {
			"keccak256": "0xb564337cbf1b5e495abd99b7221a8b1de7c0d5bad19c5cccc3dcbca66547bebc",
			"urls": [
				"bzzr://7ac01d8bb0ff7caa193a004fc5828a0df03aa3232d2b346711554a972a19704e"
			]
		},
		"XRC777/IERC777Sender.sol": {
			"keccak256": "0x0bf30262a70f5e4e11782ca4fcbd542ed251d305c04520c74eb75fff8edbad0a",
			"urls": [
				"bzzr://014080b373a801423c798cf220ffae7e7f7810a47cfea8cc68c91f8dc588f950"
			]
		},
		"XRC777/SafeMath.sol": {
			"keccak256": "0xf18f5f0027ba4abcc41d2b57fe6a2892b6ba44db0f9cc19c25bb483c9b9347b5",
			"urls": [
				"bzzr://b26c54d5c430b0609253e22f4a08806e9e9cab2164ef7ae5c4c832f53504d2ef"
			]
		}
	},
	"version": 1
}